cmake_minimum_required(VERSION 3.0)
set(EVAR "DecodeHQ")
SET(VC2LIB "vc2Library.lib")
project(${EVAR})
set(BOOST_ROOT $ENV{BOOST_DIR})
set(BOOST_NO_SYSTEM_PATHS ON)
set(Boost_USE_STATIC_LIBS ON)
find_package(Boost COMPONENTS thread system REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
if(Boost_FOUND)
	MESSAGE( STATUS "Boost_INCLUDE_DIRS = ${Boost_INCLUDE_DIRS}.")
    MESSAGE( STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}.")
    MESSAGE( STATUS "Boost_LIB_VERSION = ${Boost_LIB_VERSION}.")
    MESSAGE( STATUS "Boost_LIBRARY_DIRS = ${Boost_LIBRARY_DIRS}.")
	message( STATUS "PROJECT_SOURCE_DIR = ${PROJECT_SOURCE_DIR}")	
    include_directories(${Boost_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/../boost 
	${CMAKE_CURRENT_SOURCE_DIR}/../tclap ${CMAKE_CURRENT_SOURCE_DIR}/../Library)
    link_directories(${Boost_LIBRARY_DIRS} ${CMAKE_BINARY_DIR}/Library)
	file(GLOB SOURCES ${PROJECT_SOURCE_DIR}/*.cpp ${PROJECT_SOURCE_DIR}/*.h 
						${PROJECT_SOURCE_DIR}/../boost/*.h ${PROJECT_SOURCE_DIR}/../tclap/*.h)	
	add_executable(${EVAR} ${SOURCES})	
    target_link_libraries (${EVAR} ${Boost_LIBRARIES})
    target_link_libraries (${EVAR} ${VC2LIB})	
endif()